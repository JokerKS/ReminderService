//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VKozenko.ReminderClient.ServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Code11.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.Reminder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.User))]
    public partial class Entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reminder", Namespace="http://schemas.datacontract.org/2004/07/Code11.Model")]
    [System.SerializableAttribute()]
    public partial class Reminder : VKozenko.ReminderClient.ServiceProxy.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysField;
        
        private string DescriptionField;
        
        private string NameField;
        
        private VKozenko.ReminderClient.ServiceProxy.ReminderType ReminderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAndTime {
            get {
                return this.DateAndTimeField;
            }
            set {
                if ((this.DateAndTimeField.Equals(value) != true)) {
                    this.DateAndTimeField = value;
                    this.RaisePropertyChanged("DateAndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Days {
            get {
                return this.DaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysField, value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public VKozenko.ReminderClient.ServiceProxy.ReminderType ReminderType {
            get {
                return this.ReminderTypeField;
            }
            set {
                if ((this.ReminderTypeField.Equals(value) != true)) {
                    this.ReminderTypeField = value;
                    this.RaisePropertyChanged("ReminderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
    [System.SerializableAttribute()]
    public partial class User : VKozenko.ReminderClient.ServiceProxy.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VKozenko.ReminderClient.ServiceProxy.Reminder[] RemindersField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VKozenko.ReminderClient.ServiceProxy.Reminder[] Reminders {
            get {
                return this.RemindersField;
            }
            set {
                if ((object.ReferenceEquals(this.RemindersField, value) != true)) {
                    this.RemindersField = value;
                    this.RaisePropertyChanged("Reminders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReminderType", Namespace="http://schemas.datacontract.org/2004/07/Code11.Model")]
    public enum ReminderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EveryDay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EveryWeek = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EveryYear = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Once = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.UserNotFound))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.NotCorrectDataAndTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.ReminderNotFound))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.NotCorrectUsernameOrPassword))]
    public partial class ServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserNotFound", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
    [System.SerializableAttribute()]
    public partial class UserNotFound : VKozenko.ReminderClient.ServiceProxy.ServiceException {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotCorrectDataAndTime", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
    [System.SerializableAttribute()]
    public partial class NotCorrectDataAndTime : VKozenko.ReminderClient.ServiceProxy.ServiceException {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReminderNotFound", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
    [System.SerializableAttribute()]
    public partial class ReminderNotFound : VKozenko.ReminderClient.ServiceProxy.ServiceException {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotCorrectUsernameOrPassword", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
    [System.SerializableAttribute()]
    public partial class NotCorrectUsernameOrPassword : VKozenko.ReminderClient.ServiceProxy.ServiceException {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceProxy.IReminder", CallbackContract=typeof(VKozenko.ReminderClient.ServiceProxy.IReminderCallback))]
    public interface IReminder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/Login", ReplyAction="http://tempuri.org/IReminder/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.NotCorrectUsernameOrPassword), Action="http://tempuri.org/IReminder/LoginNotCorrectUsernameOrPasswordFault", Name="NotCorrectUsernameOrPassword", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        VKozenko.ReminderClient.ServiceProxy.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/Login", ReplyAction="http://tempuri.org/IReminder/LoginResponse")]
        System.Threading.Tasks.Task<VKozenko.ReminderClient.ServiceProxy.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/SignOut", ReplyAction="http://tempuri.org/IReminder/SignOutResponse")]
        bool SignOut(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/SignOut", ReplyAction="http://tempuri.org/IReminder/SignOutResponse")]
        System.Threading.Tasks.Task<bool> SignOutAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/Register", ReplyAction="http://tempuri.org/IReminder/RegisterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.NotCorrectUsernameOrPassword), Action="http://tempuri.org/IReminder/RegisterNotCorrectUsernameOrPasswordFault", Name="NotCorrectUsernameOrPassword", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        bool Register(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/Register", ReplyAction="http://tempuri.org/IReminder/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/UpdateUser", ReplyAction="http://tempuri.org/IReminder/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IReminder/UpdateUserArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool UpdateUser(VKozenko.ReminderClient.ServiceProxy.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/UpdateUser", ReplyAction="http://tempuri.org/IReminder/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(VKozenko.ReminderClient.ServiceProxy.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/RemoveUser", ReplyAction="http://tempuri.org/IReminder/RemoveUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.UserNotFound), Action="http://tempuri.org/IReminder/RemoveUserUserNotFoundFault", Name="UserNotFound", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        bool RemoveUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/RemoveUser", ReplyAction="http://tempuri.org/IReminder/RemoveUserResponse")]
        System.Threading.Tasks.Task<bool> RemoveUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/GetReminder", ReplyAction="http://tempuri.org/IReminder/GetReminderResponse")]
        VKozenko.ReminderClient.ServiceProxy.Reminder GetReminder(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/GetReminder", ReplyAction="http://tempuri.org/IReminder/GetReminderResponse")]
        System.Threading.Tasks.Task<VKozenko.ReminderClient.ServiceProxy.Reminder> GetReminderAsync(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/GetAllReminders", ReplyAction="http://tempuri.org/IReminder/GetAllRemindersResponse")]
        VKozenko.ReminderClient.ServiceProxy.Reminder[] GetAllReminders(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/GetAllReminders", ReplyAction="http://tempuri.org/IReminder/GetAllRemindersResponse")]
        System.Threading.Tasks.Task<VKozenko.ReminderClient.ServiceProxy.Reminder[]> GetAllRemindersAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/AddReminder", ReplyAction="http://tempuri.org/IReminder/AddReminderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.NotCorrectDataAndTime), Action="http://tempuri.org/IReminder/AddReminderNotCorrectDataAndTimeFault", Name="NotCorrectDataAndTime", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        int AddReminder(int userId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/AddReminder", ReplyAction="http://tempuri.org/IReminder/AddReminderResponse")]
        System.Threading.Tasks.Task<int> AddReminderAsync(int userId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/UpdateReminder", ReplyAction="http://tempuri.org/IReminder/UpdateReminderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.ReminderNotFound), Action="http://tempuri.org/IReminder/UpdateReminderReminderNotFoundFault", Name="ReminderNotFound", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        bool UpdateReminder(int userId, int reminderId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/UpdateReminder", ReplyAction="http://tempuri.org/IReminder/UpdateReminderResponse")]
        System.Threading.Tasks.Task<bool> UpdateReminderAsync(int userId, int reminderId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/RemoveReminder", ReplyAction="http://tempuri.org/IReminder/RemoveReminderResponse")]
        bool RemoveReminder(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/RemoveReminder", ReplyAction="http://tempuri.org/IReminder/RemoveReminderResponse")]
        System.Threading.Tasks.Task<bool> RemoveReminderAsync(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/ActivateReminder", ReplyAction="http://tempuri.org/IReminder/ActivateReminderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.ReminderNotFound), Action="http://tempuri.org/IReminder/ActivateReminderReminderNotFoundFault", Name="ReminderNotFound", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        bool ActivateReminder(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/ActivateReminder", ReplyAction="http://tempuri.org/IReminder/ActivateReminderResponse")]
        System.Threading.Tasks.Task<bool> ActivateReminderAsync(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/DeactivateReminder", ReplyAction="http://tempuri.org/IReminder/DeactivateReminderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VKozenko.ReminderClient.ServiceProxy.ReminderNotFound), Action="http://tempuri.org/IReminder/DeactivateReminderReminderNotFoundFault", Name="ReminderNotFound", Namespace="http://schemas.datacontract.org/2004/07/Code11")]
        bool DeactivateReminder(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReminder/DeactivateReminder", ReplyAction="http://tempuri.org/IReminder/DeactivateReminderResponse")]
        System.Threading.Tasks.Task<bool> DeactivateReminderAsync(int userId, int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReminder/ConfirmReceipt")]
        void ConfirmReceipt(int reminderId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReminder/ConfirmReceipt")]
        System.Threading.Tasks.Task ConfirmReceiptAsync(int reminderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReminderCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReminder/ExecuteReminder")]
        void ExecuteReminder(VKozenko.ReminderClient.ServiceProxy.Reminder reminder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReminderChannel : VKozenko.ReminderClient.ServiceProxy.IReminder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReminderClient : System.ServiceModel.DuplexClientBase<VKozenko.ReminderClient.ServiceProxy.IReminder>, VKozenko.ReminderClient.ServiceProxy.IReminder {
        
        public ReminderClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ReminderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ReminderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ReminderClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ReminderClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public VKozenko.ReminderClient.ServiceProxy.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<VKozenko.ReminderClient.ServiceProxy.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool SignOut(int userId) {
            return base.Channel.SignOut(userId);
        }
        
        public System.Threading.Tasks.Task<bool> SignOutAsync(int userId) {
            return base.Channel.SignOutAsync(userId);
        }
        
        public bool Register(string username, string password, string email) {
            return base.Channel.Register(username, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password, string email) {
            return base.Channel.RegisterAsync(username, password, email);
        }
        
        public bool UpdateUser(VKozenko.ReminderClient.ServiceProxy.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(VKozenko.ReminderClient.ServiceProxy.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool RemoveUser(int userId) {
            return base.Channel.RemoveUser(userId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveUserAsync(int userId) {
            return base.Channel.RemoveUserAsync(userId);
        }
        
        public VKozenko.ReminderClient.ServiceProxy.Reminder GetReminder(int userId, int reminderId) {
            return base.Channel.GetReminder(userId, reminderId);
        }
        
        public System.Threading.Tasks.Task<VKozenko.ReminderClient.ServiceProxy.Reminder> GetReminderAsync(int userId, int reminderId) {
            return base.Channel.GetReminderAsync(userId, reminderId);
        }
        
        public VKozenko.ReminderClient.ServiceProxy.Reminder[] GetAllReminders(int userId) {
            return base.Channel.GetAllReminders(userId);
        }
        
        public System.Threading.Tasks.Task<VKozenko.ReminderClient.ServiceProxy.Reminder[]> GetAllRemindersAsync(int userId) {
            return base.Channel.GetAllRemindersAsync(userId);
        }
        
        public int AddReminder(int userId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder) {
            return base.Channel.AddReminder(userId, reminder);
        }
        
        public System.Threading.Tasks.Task<int> AddReminderAsync(int userId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder) {
            return base.Channel.AddReminderAsync(userId, reminder);
        }
        
        public bool UpdateReminder(int userId, int reminderId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder) {
            return base.Channel.UpdateReminder(userId, reminderId, reminder);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateReminderAsync(int userId, int reminderId, VKozenko.ReminderClient.ServiceProxy.Reminder reminder) {
            return base.Channel.UpdateReminderAsync(userId, reminderId, reminder);
        }
        
        public bool RemoveReminder(int userId, int reminderId) {
            return base.Channel.RemoveReminder(userId, reminderId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveReminderAsync(int userId, int reminderId) {
            return base.Channel.RemoveReminderAsync(userId, reminderId);
        }
        
        public bool ActivateReminder(int userId, int reminderId) {
            return base.Channel.ActivateReminder(userId, reminderId);
        }
        
        public System.Threading.Tasks.Task<bool> ActivateReminderAsync(int userId, int reminderId) {
            return base.Channel.ActivateReminderAsync(userId, reminderId);
        }
        
        public bool DeactivateReminder(int userId, int reminderId) {
            return base.Channel.DeactivateReminder(userId, reminderId);
        }
        
        public System.Threading.Tasks.Task<bool> DeactivateReminderAsync(int userId, int reminderId) {
            return base.Channel.DeactivateReminderAsync(userId, reminderId);
        }
        
        public void ConfirmReceipt(int reminderId) {
            base.Channel.ConfirmReceipt(reminderId);
        }
        
        public System.Threading.Tasks.Task ConfirmReceiptAsync(int reminderId) {
            return base.Channel.ConfirmReceiptAsync(reminderId);
        }
    }
}
